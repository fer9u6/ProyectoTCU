<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="backB.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAMAAAD04JH5AAAABGdBTUEAALGPC/xhBQAAAG9QTFRF////
        AAAA7+/v9/f3+/v7FRUVTExMV1dXIyMj5+fn1dXVxsbG3t7ey8vLa2trMTExDw8P5eXlGxsbfHx8RUVF
        PT09sbGxXFxcj4+PJiYmenp6EhISKysrODg48vLyqKiooKCgjY2NZGRkcnJyubm5DWB7ewAAApRJREFU
        eF7tmm13ojAQhQngGwqioLTdrnTt/v/fuAFvEQWUZIb0bM883whh7j0hwcxETxAEQRAEQRAEQRD+W+LP
        xbkMceGesFAV7xtcuyaY1/pKLX20uKXRV+oNTU4JcqhrlmhzSVtfKTQ65FbfvYHTAcoAzc6413dt4PQb
        ug244YiuvlsDflffqQF/C9E2uOeCXn2HBvr13RlYvUPxDtyenCF9VwYG9R0Z2L1Crgt6TMsDfXXOymjq
        ndluCbEh0kO2ntDE5pl+TVocJ/IwTr9i9jnFHnWzR/hRzNd4jA0zfU0e40keIlN9zWKHhxmw0dfz8QWP
        k4lmCGnKgWc2WuvrQSgRgwJBX5OQvwrxL4SyJCemjVR9nTqTVkOcIgyBJWEqrhn0ldpbO+DR12OwQkBT
        uAyo7QkRTeGYAjVzBDSGvghAhoDGsDn4i4DG0D6EV2a2E5HNwQLxzOFycEQ8c5gc7APEM8duQ9LBeiVY
        bAl7Sa3nIZeDBNFsGJ8WPIAyBDwOSCVlDgcz+4WgeZqcjoC2SX2Uno8kRyhLVsMO/NUmWh8/snP+eJyI
        6dKoEk0QfyT9pTQNNVsaXaTyy6L3A058B4Nlwr4aUXhc4GaLlLQOKowKlX7WGQbrjUmDWak2eLmzQPhF
        +qKvWD5owPNOb+hywXp72sK0XB+1++/RSML4wOIPelXYpgg3dI6Mnhjw1tefc57ikfGhld88wFGz0Nwd
        Gz414AVfHwWuypH5wWVy6cmwDi+YH92e656UfdktrcNz9Yq2x9Rv4YwLBsKrg3HjGlaDVuCCg8bBcuTi
        9vVmwT5F6yG8vNbt6BpMlPIa0Ol7ViQmJwQltwFjiu82cPqWv5u0IW+JBEEQBEEQBEEQfiSe9w/j/Bw2
        UsFBpwAAAABJRU5ErkJggg==
</value>
  </data>
</root>