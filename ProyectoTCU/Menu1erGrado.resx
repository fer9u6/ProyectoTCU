<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="backB.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAMAAAD04JH5AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAABvUExURf///wAAAO/v7/f39/v7+xUVFUxMTFdXVyMjI+fn59XV1cbGxt7e3svLy2trazExMQ8P
        D+Xl5RsbG3x8fEVFRT09PbGxsVxcXI+PjyYmJnp6ehISEisrKzg4OPLy8qioqKCgoI2NjWRkZHJycrm5
        uQ1ge3sAAAKUSURBVHhe7Zptd6IwEIUJ4BsKoqC03a507f7/37gBbxEFlGSG9GzPPN8IYe49IcHMRE8Q
        BEEQBEEQBEEQ/lviz8W5DHHhnrBQFe8bXLsmmNf6Si19tLil0VfqDU1OCXKoa5Zoc0lbXyk0OuRW372B
        0wHKAM3OuNd3beD0G7oNuOGIrr5bA35X36kBfwvRNrjngl59hwb69d0ZWL1D8Q7cnpwhfVcGBvUdGdi9
        Qq4LekzLA311zspo6p3ZbgmxIdJDtp7QxOaZfk1aHCfyME6/YvY5xR51s0f4UczXeIwNM31NHuNJHiJT
        fc1ih4cZsNHX8/EFj5OJZghpyoFnNlrr60EoEYMCQV+TkL8K8S+EsiQnpo1UfZ06k1ZDnCIMgSVhKq4Z
        9JXaWzvg0ddjsEJAU7gMqO0JEU3hmAI1cwQ0hr4IQIaAxrA5+IuAxtA+hFdmthORzcEC8czhcnBEPHOY
        HOwDxDPHbkPSwXolWGwJe0mt5yGXgwTRbBifFjyAMgQ8DkglZQ4HM/uFoHmanI6Atkl9lJ6PJEcoS1bD
        DvzVJlofP7Jz/niciOnSqBJNEH8k/aU0DTVbGl2k8sui9wNOfAeDZcK+GlF4XOBmi5S0DiqMCpV+1hkG
        641Jg1mpNni5s0D4Rfqir1g+aMDzTm/ocsF6e9rCtFwftfvv0UjC+MDiD3pV2KYIN3SOjJ4Y8NbXn3Oe
        4pHxoZXfPMBRs9DcHRs+NeAFXx8FrsqR+cFlcunJsA4vmB/dnuuelH3ZLa3Dc/WKtsfUb+GMCwbCq4Nx
        4xpWg1bggoPGwXLk4vb1ZsE+ReshvLzW7egaTJTyGtDpe1YkJicEJbcBY4rvNnD6lr+btCFviQRBEARB
        EARBEH4knvcP4/wcNlLBQacAAAAASUVORK5CYII=
</value>
  </data>
</root>